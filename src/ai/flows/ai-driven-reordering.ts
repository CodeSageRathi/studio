// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A flow to suggest recurring orders to buyers based on their past buying patterns.
 *
 * - suggestReorder - A function that handles the reorder suggestion process.
 * - SuggestReorderInput - The input type for the suggestReorder function.
 * - SuggestReorderOutput - The return type for the suggestReorder function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestReorderInputSchema = z.object({
  buyerId: z.string().describe('The ID of the buyer.'),
});
export type SuggestReorderInput = z.infer<typeof SuggestReorderInputSchema>;

const SuggestedOrderItemSchema = z.object({
  productId: z.string().describe('The ID of the product.'),
  productName: z.string().describe('The name of the product.'),
  quantity: z.number().int().positive().describe('The suggested quantity to reorder.'),
  unitPrice: z.number().positive().describe('The price per unit of the product.'),
  imageUrl: z.string().optional().describe('URL of the product image.'),
});

const SuggestReorderOutputSchema = z.object({
  suggestedOrderItems: z.array(SuggestedOrderItemSchema).describe('A list of suggested order items based on past buying patterns.'),
  reasoning: z.string().describe('Explanation behind the reorder suggestions.'),
});

export type SuggestReorderOutput = z.infer<typeof SuggestReorderOutputSchema>;

export async function suggestReorder(input: SuggestReorderInput): Promise<SuggestReorderOutput> {
  return suggestReorderFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestReorderPrompt',
  input: {schema: SuggestReorderInputSchema},
  output: {schema: SuggestReorderOutputSchema},
  prompt: `You are an AI assistant designed to help buyers quickly reorder frequently purchased items.

  Based on the buyer's ID ({{{buyerId}}}), analyze their past buying patterns and suggest a list of items they might want to reorder.

  Consider the frequency with which they have purchased items, the quantities they typically order, and any seasonality or trends in their purchases.

  Provide a 'reasoning' to explain the reorder suggestions, highlighting the factors you considered when generating the list.
  `,
});

const suggestReorderFlow = ai.defineFlow(
  {
    name: 'suggestReorderFlow',
    inputSchema: SuggestReorderInputSchema,
    outputSchema: SuggestReorderOutputSchema,
  },
  async input => {
    // Here, you would typically fetch the buyer's order history from a database
    // and use that data to inform the prompt.
    // For this example, we'll just pass the buyerId directly to the prompt.
    const {output} = await prompt(input);
    return output!;
  }
);
